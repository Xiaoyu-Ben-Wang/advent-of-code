{
	// Place your advent-of-code workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"main": {
		"scope": "python",
		"prefix": "aoc",
		"body": [
			"from io import TextIOWrapper",
			"from timeit import default_timer as timer",
			"from datetime import timedelta",
			"",
			"",
			"def partOne(f: TextIOWrapper):",
			"\t${0:pass}",
			"",
			"",
			"def partTwo(f: TextIOWrapper):",
			"\tpass",
			"",
			"",
			"if __name__ == '__main__':",
    		"\twith open('${1:input}.txt') as f:",
        	"\t\tstart = timer()",
        	"\t\tans = partOne(f)",
        	"\t\tend = timer()",
        	"\t\tprint(f'Part 1 [{timedelta(seconds=end-start)}]: {ans}')",
			"",
        	"\t\tf.seek(0)",
        	"\t\tstart = timer()",
        	"\t\tans = partTwo(f)",
        	"\t\tend = timer()",
        	"\t\tprint(f'Part 2 [{timedelta(seconds=end-start)}]: {ans}')",
		],
		"description": "main advent of code function"
	}
}